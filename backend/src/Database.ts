//Source code generated by AppGPT (www.appgpt.tech)

//Class to create tables and seed new database
import { DataSource } from 'typeorm';
import { DBConfiguration } from './Configuration';
import { SettingsEntity } from './db/Settings.entity';
//autogenerate imports based on resources
import { UserEntity } from './db/User.entity';
import { PostEntity } from './db/Post.entity';
import { MessageEntity } from './db/Message.entity';
import { VideoCallEntity } from './db/VideoCall.entity';
import { AudioCallEntity } from './db/AudioCall.entity';
import { GroupEntity } from './db/Group.entity';
import { NoticeBoardEntity } from './db/NoticeBoard.entity';

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [
      SettingsEntity,
      UserEntity,
      PostEntity,
      MessageEntity,
      VideoCallEntity,
      AudioCallEntity,
      GroupEntity,
      NoticeBoardEntity,
    ];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables

    await Database.Seed();
  }
  static async Seed() {
    let data: any = {
      User: [
        {
          name: 'name 1',
          email: 'email 1',
          password: 'password 1',
          profilePicture: 'profilePicture 1',
          id: 40,
        },
        {
          name: 'name 2',
          email: 'email 2',
          password: 'password 2',
          profilePicture: 'profilePicture 2',
          id: 81,
        },
        {
          name: 'name 3',
          email: 'email 3',
          password: 'password 3',
          profilePicture: 'profilePicture 3',
          id: 59,
        },
        {
          name: 'name 4',
          email: 'email 4',
          password: 'password 4',
          profilePicture: 'profilePicture 4',
          id: 47,
        },
        {
          name: 'name 5',
          email: 'email 5',
          password: 'password 5',
          profilePicture: 'profilePicture 5',
          id: 51,
        },
      ],
      Post: [
        {
          title: 'title 1',
          content: 'content 1',
          subject: 'subject 1',
          author: 1,
          postDate: '2024-03-08T21:54:00.748Z',
          id: 30,
        },
        {
          title: 'title 2',
          content: 'content 2',
          subject: 'subject 2',
          author: 2,
          postDate: '2024-02-02T10:24:10.964Z',
          id: 76,
        },
        {
          title: 'title 3',
          content: 'content 3',
          subject: 'subject 3',
          author: 3,
          postDate: '2023-07-14T01:30:19.429Z',
          id: 38,
        },
        {
          title: 'title 4',
          content: 'content 4',
          subject: 'subject 4',
          author: 4,
          postDate: '2024-10-25T19:51:28.892Z',
          id: 56,
        },
        {
          title: 'title 5',
          content: 'content 5',
          subject: 'subject 5',
          author: 5,
          postDate: '2024-09-18T13:33:03.389Z',
          id: 84,
        },
      ],
      Message: [
        {
          sender: 1,
          receiver: 1,
          messageContent: 'messageContent 1',
          subject: 'subject 1',
          timestamp: '2024-05-10T21:58:08.057Z',
          id: 66,
        },
        {
          sender: 2,
          receiver: 2,
          messageContent: 'messageContent 2',
          subject: 'subject 2',
          timestamp: '2024-08-13T19:14:11.171Z',
          id: 31,
        },
        {
          sender: 3,
          receiver: 3,
          messageContent: 'messageContent 3',
          subject: 'subject 3',
          timestamp: '2024-04-08T17:33:04.526Z',
          id: 17,
        },
        {
          sender: 4,
          receiver: 4,
          messageContent: 'messageContent 4',
          subject: 'subject 4',
          timestamp: '2024-09-05T06:31:08.239Z',
          id: 10,
        },
        {
          sender: 5,
          receiver: 5,
          messageContent: 'messageContent 5',
          subject: 'subject 5',
          timestamp: '2025-04-10T23:48:24.020Z',
          id: 27,
        },
      ],
      VideoCall: [
        {
          callID: 'callID 1',
          participants: 1,
          startTime: '2024-07-01T00:55:49.421Z',
          endTime: '2024-06-21T01:10:24.717Z',
          callTitle: 'callTitle 1',
          callStatus: 'callStatus 1',
          id: 59,
        },
        {
          callID: 'callID 2',
          participants: 2,
          startTime: '2024-03-25T23:50:27.589Z',
          endTime: '2023-12-05T14:44:44.449Z',
          callTitle: 'callTitle 2',
          callStatus: 'callStatus 2',
          id: 13,
        },
        {
          callID: 'callID 3',
          participants: 3,
          startTime: '2024-09-25T16:30:58.251Z',
          endTime: '2023-05-02T11:58:22.492Z',
          callTitle: 'callTitle 3',
          callStatus: 'callStatus 3',
          id: 28,
        },
        {
          callID: 'callID 4',
          participants: 4,
          startTime: '2023-07-26T18:11:35.415Z',
          endTime: '2024-02-24T15:33:24.002Z',
          callTitle: 'callTitle 4',
          callStatus: 'callStatus 4',
          id: 69,
        },
        {
          callID: 'callID 5',
          participants: 5,
          startTime: '2024-04-24T19:09:46.718Z',
          endTime: '2023-11-05T03:27:22.956Z',
          callTitle: 'callTitle 5',
          callStatus: 'callStatus 5',
          id: 94,
        },
      ],
      AudioCall: [
        {
          callID: 'callID 1',
          participants: 1,
          startTime: '2023-09-20T16:29:00.110Z',
          endTime: '2023-06-04T08:09:58.629Z',
          callTitle: 'callTitle 1',
          callStatus: 'callStatus 1',
          id: 58,
        },
        {
          callID: 'callID 2',
          participants: 2,
          startTime: '2025-03-30T23:50:09.303Z',
          endTime: '2025-02-15T01:37:28.719Z',
          callTitle: 'callTitle 2',
          callStatus: 'callStatus 2',
          id: 35,
        },
        {
          callID: 'callID 3',
          participants: 3,
          startTime: '2024-09-08T01:36:56.250Z',
          endTime: '2023-10-31T04:58:34.052Z',
          callTitle: 'callTitle 3',
          callStatus: 'callStatus 3',
          id: 6,
        },
        {
          callID: 'callID 4',
          participants: 4,
          startTime: '2024-03-29T22:42:17.065Z',
          endTime: '2024-12-17T16:10:46.657Z',
          callTitle: 'callTitle 4',
          callStatus: 'callStatus 4',
          id: 98,
        },
        {
          callID: 'callID 5',
          participants: 5,
          startTime: '2025-02-08T04:45:12.831Z',
          endTime: '2025-04-02T22:21:28.004Z',
          callTitle: 'callTitle 5',
          callStatus: 'callStatus 5',
          id: 12,
        },
      ],
      Group: [
        {
          groupID: 'groupID 1',
          groupName: 'groupName 1',
          members: 1,
          groupDescription: 'groupDescription 1',
          creationDate: '2023-07-03T23:21:53.448Z',
          groupAdmin: 1,
          id: 88,
        },
        {
          groupID: 'groupID 2',
          groupName: 'groupName 2',
          members: 2,
          groupDescription: 'groupDescription 2',
          creationDate: '2023-05-20T00:36:58.717Z',
          groupAdmin: 2,
          id: 84,
        },
        {
          groupID: 'groupID 3',
          groupName: 'groupName 3',
          members: 3,
          groupDescription: 'groupDescription 3',
          creationDate: '2023-08-29T04:48:05.033Z',
          groupAdmin: 3,
          id: 89,
        },
        {
          groupID: 'groupID 4',
          groupName: 'groupName 4',
          members: 4,
          groupDescription: 'groupDescription 4',
          creationDate: '2023-07-05T18:23:55.598Z',
          groupAdmin: 4,
          id: 91,
        },
        {
          groupID: 'groupID 5',
          groupName: 'groupName 5',
          members: 5,
          groupDescription: 'groupDescription 5',
          creationDate: '2024-05-04T10:09:11.420Z',
          groupAdmin: 5,
          id: 6,
        },
      ],
      NoticeBoard: [
        {
          noticeID: 'noticeID 1',
          title: 'title 1',
          content: 'content 1',
          author: 1,
          targetAudience: 1,
          publicationDate: '2023-04-17T04:09:27.330Z',
          id: 18,
        },
        {
          noticeID: 'noticeID 2',
          title: 'title 2',
          content: 'content 2',
          author: 2,
          targetAudience: 2,
          publicationDate: '2025-02-26T16:37:54.560Z',
          id: 19,
        },
        {
          noticeID: 'noticeID 3',
          title: 'title 3',
          content: 'content 3',
          author: 3,
          targetAudience: 3,
          publicationDate: '2024-04-14T12:24:36.755Z',
          id: 13,
        },
        {
          noticeID: 'noticeID 4',
          title: 'title 4',
          content: 'content 4',
          author: 4,
          targetAudience: 4,
          publicationDate: '2024-01-19T15:41:26.707Z',
          id: 97,
        },
        {
          noticeID: 'noticeID 5',
          title: 'title 5',
          content: 'content 5',
          author: 5,
          targetAudience: 5,
          publicationDate: '2024-06-19T21:51:05.821Z',
          id: 88,
        },
      ],
    };
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true) {
      console.log('   Seeding database...');
      await this.SeedResource('UserEntity', data.User);
      await this.SeedResource('PostEntity', data.Post);
      await this.SeedResource('MessageEntity', data.Message);
      await this.SeedResource('VideoCallEntity', data.VideoCall);
      await this.SeedResource('AudioCallEntity', data.AudioCall);
      await this.SeedResource('GroupEntity', data.Group);
      await this.SeedResource('NoticeBoardEntity', data.NoticeBoard);
      await this.SeedResource('SettingsEntity', {
        settingname: 'isSeeded',
        settingvalue: 'true',
      });
    } else {
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository('SettingsEntity');
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: 'isSeeded',
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table ' + resourceName);
    await repo.upsert(resourceData, ['id']);
  }
}
